import oommfc as mc
import discretisedfield as df
import micromagneticmodel as mm
import random
import pandas as pd

# ** IMPORTANT **
driveIndex = 0 #  change this each time to match your drive number (starting with 0) so you dont overwrite your CSV data
# ** IMPORTANT **

# also be sure to have at least ~100gb of hard drive space each time you run this program

cell=(2e-9,2e-9,2e-9) # discretization cell size

l = 22e-9 # size of MNP 
w = 32e-9
h = 70e-9
s = 2e-9  # parallelpiped spacing

n = 1000 # number of steps for hysteresis loop
Hmin = (0, 0, -1/mm.consts.mu0) # min and max H field for hysteresis loop
Hmax = (0, 0, 1/mm.consts.mu0)

spc = 68e-9 # MNP spacing for 1st system (68nm)
spc1 = 70e-9 # MNP spacing for 2nd system (70nm)
spc2 = 100e-9 # MNP spacing for 3rd system (100nm)
spc3 = 300e-9 # MNP spacing for 4th system (300nm)

Ms = 5e5 # Parameters
A = 1.2e-11
K = 6e4

subregions = {'region_1': df.Region(p1=(0,0,0), p2=(l, w, h)),
              'region_2': df.Region(p1=(l+s, 0, 0), p2=(2*l + s, w, h)),
             'region_3': df.Region(p1=(0, w+s, 0), p2=(l, 2*w+s, h)),
             'region_4': df.Region(p1=(l+s, w+s, 0), p2=(2*l + s, 2*w+s, h)),
              'region_5': df.Region(p1=(0, 2*w+2*s, 0), p2=(l, 3*w+2*s, h)),
             'region_6': df.Region(p1=(l+s, 2*w+2*s, 0), p2=(2*l + s, 3*w+2*s, h)),
             'region_7': df.Region(p1=(0, 3*w+3*s, 0), p2=(l, 4*w+3*s, h)),
             'region_8': df.Region(p1=(l+s, 3*w+3*s, 0), p2=(2*l + s, 4*w+3*s, h)),
              'region_9': df.Region(p1=(0, 4*w+4*s, 0), p2=(l, 5*w+4*s, h)),
             'region_10': df.Region(p1=(l+s, 4*w+4*s, 0), p2=(2*l + s, 5*w+4*s, h)),
             'region_11': df.Region(p1=(0, 5*w+5*s, 0), p2=(l, 6*w+5*s, h)),
             'region_12': df.Region(p1=(l+s, 5*w+5*s, 0), p2=(2*l + s, 6*w+5*s, h)),

            #  'region_13': df.Region(p1=(0,0,0+spc), p2=(l, w, h+spc)),
            #   'region_14': df.Region(p1=(l+s, 0, 0+spc), p2=(2*l + s, w, h+spc)),
            #  'region_15': df.Region(p1=(0, w+s, 0+spc), p2=(l, 2*w+s, h+spc)),
            #  'region_16': df.Region(p1=(l+s, w+s, 0+spc), p2=(2*l + s, 2*w+s, h+spc)),
            #   'region_17': df.Region(p1=(0, 2*w+2*s, 0+spc), p2=(l, 3*w+2*s, h+spc)),
            #  'region_18': df.Region(p1=(l+s, 2*w+2*s, 0+spc), p2=(2*l + s, 3*w+2*s, h+spc)),
            #  'region_19': df.Region(p1=(0, 3*w+3*s, 0+spc), p2=(l, 4*w+3*s, h+spc)),
            #  'region_20': df.Region(p1=(l+s, 3*w+3*s, 0+spc), p2=(2*l + s, 4*w+3*s, h+spc)),
            #   'region_21': df.Region(p1=(0, 4*w+4*s, 0+spc), p2=(l, 5*w+4*s, h+spc)),
            #  'region_22': df.Region(p1=(l+s, 4*w+4*s, 0+spc), p2=(2*l + s, 5*w+4*s, h+spc)),
            #  'region_23': df.Region(p1=(0, 5*w+5*s, 0+spc), p2=(l, 6*w+5*s, h+spc)),
            #  'region_24': df.Region(p1=(l+s, 5*w+5*s, 0+spc), p2=(2*l + s, 6*w+5*s, h+spc)),

            #  'region_25': df.Region(p1=(0,0,0+2*spc), p2=(l, w, h+2*spc)),
            #   'region_26': df.Region(p1=(l+s, 0, 0+2*spc), p2=(2*l + s, w, h+2*spc)),
            #  'region_27': df.Region(p1=(0, w+s, 0+2*spc), p2=(l, 2*w+s, h+2*spc)),
            #  'region_28': df.Region(p1=(l+s, w+s, 0+2*spc), p2=(2*l + s, 2*w+s, h+2*spc)),
            #   'region_29': df.Region(p1=(0, 2*w+2*s, 0+2*spc), p2=(l, 3*w+2*s, h+2*spc)),
            #  'region_30': df.Region(p1=(l+s, 2*w+2*s, 0+2*spc), p2=(2*l + s, 3*w+2*s, h+2*spc)),
            #  'region_31': df.Region(p1=(0, 3*w+3*s, 0+2*spc), p2=(l, 4*w+3*s, h+2*spc)),
            #  'region_32': df.Region(p1=(l+s, 3*w+3*s, 0+2*spc), p2=(2*l + s, 4*w+3*s, h+2*spc)),
            #   'region_33': df.Region(p1=(0, 4*w+4*s, 0+2*spc), p2=(l, 5*w+4*s, h+2*spc)),
            #  'region_34': df.Region(p1=(l+s, 4*w+4*s, 0+2*spc), p2=(2*l + s, 5*w+4*s, h+2*spc)),
            #  'region_35': df.Region(p1=(0, 5*w+5*s, 0+2*spc), p2=(l, 6*w+5*s, h+2*spc)),
            #  'region_36': df.Region(p1=(l+s, 5*w+5*s, 0+2*spc), p2=(2*l + s, 6*w+5*s, h+2*spc)),

            #  'region_37': df.Region(p1=(0,0,0+3*spc), p2=(l, w, h+3*spc)),
            #   'region_38': df.Region(p1=(l+s, 0, 0+3*spc), p2=(2*l + s, w, h+3*spc)),
            #  'region_39': df.Region(p1=(0, w+s, 0+3*spc), p2=(l, 2*w+s, h+3*spc)),
            #  'region_40': df.Region(p1=(l+s, w+s, 0+3*spc), p2=(2*l + s, 2*w+s, h+3*spc)),
            #   'region_41': df.Region(p1=(0, 2*w+2*s, 0+3*spc), p2=(l, 3*w+2*s, h+3*spc)),
            #  'region_42': df.Region(p1=(l+s, 2*w+2*s, 0+3*spc), p2=(2*l + s, 3*w+2*s, h+3*spc)),
            #  'region_43': df.Region(p1=(0, 3*w+3*s, 0+3*spc), p2=(l, 4*w+3*s, h+3*spc)),
            #  'region_44': df.Region(p1=(l+s, 3*w+3*s, 0+3*spc), p2=(2*l + s, 4*w+3*s, h+3*spc)),
            #   'region_45': df.Region(p1=(0, 4*w+4*s, 0+3*spc), p2=(l, 5*w+4*s, h+3*spc)),
            #  'region_46': df.Region(p1=(l+s, 4*w+4*s, 0+3*spc), p2=(2*l + s, 5*w+4*s, h+3*spc)),
            #  'region_47': df.Region(p1=(0, 5*w+5*s, 0+3*spc), p2=(l, 6*w+5*s, h+3*spc)),
            #  'region_48': df.Region(p1=(l+s, 5*w+5*s, 0+3*spc), p2=(2*l + s, 6*w+5*s, h+3*spc)),


            #  'region_49': df.Region(p1=(0,0,0+4*spc), p2=(l, w, h+4*spc)),
            #   'region_50': df.Region(p1=(l+s, 0, 0+4*spc), p2=(2*l + s, w, h+4*spc)),
            #  'region_51': df.Region(p1=(0, w+s, 0+4*spc), p2=(l, 2*w+s, h+4*spc)),
            #  'region_52': df.Region(p1=(l+s, w+s, 0+4*spc), p2=(2*l + s, 2*w+s, h+4*spc)),
            #   'region_53': df.Region(p1=(0, 2*w+2*s, 0+4*spc), p2=(l, 3*w+2*s, h+4*spc)),
            #  'region_54': df.Region(p1=(l+s, 2*w+2*s, 0+4*spc), p2=(2*l + s, 3*w+2*s, h+4*spc)),
            #  'region_55': df.Region(p1=(0, 3*w+3*s, 0+4*spc), p2=(l, 4*w+3*s, h+4*spc)),
            #  'region_56': df.Region(p1=(l+s, 3*w+3*s, 0+4*spc), p2=(2*l + s, 4*w+3*s, h+4*spc)),
            #   'region_57': df.Region(p1=(0, 4*w+4*s, 0+4*spc), p2=(l, 5*w+4*s, h+4*spc)),
            #  'region_58': df.Region(p1=(l+s, 4*w+4*s, 0+4*spc), p2=(2*l + s, 5*w+4*s, h+4*spc)),
            #  'region_59': df.Region(p1=(0, 5*w+5*s, 0+4*spc), p2=(l, 6*w+5*s, h+4*spc)),
            #  'region_60': df.Region(p1=(l+s, 5*w+5*s, 0+4*spc), p2=(2*l + s, 6*w+5*s, h+4*spc)),
              'interspace': df.Region(p1=(0,0,0), p2 = (2*l + s, 6*w +5*s, h+4*spc))
             }

mesh = df.Mesh(p1=(0,0,0), p2 = (2*l + s, 6*w+5*s, h+4*spc), cell=cell, subregions=subregions)

# subregions1 = {'region_1': df.Region(p1=(0,0,0), p2=(l, w, h)),
#               'region_2': df.Region(p1=(l+s, 0, 0), p2=(2*l + s, w, h)),
#              'region_3': df.Region(p1=(0, w+s, 0), p2=(l, 2*w+s, h)),
#              'region_4': df.Region(p1=(l+s, w+s, 0), p2=(2*l + s, 2*w+s, h)),
#               'region_5': df.Region(p1=(0, 2*w+2*s, 0), p2=(l, 3*w+2*s, h)),
#              'region_6': df.Region(p1=(l+s, 2*w+2*s, 0), p2=(2*l + s, 3*w+2*s, h)),
#              'region_7': df.Region(p1=(0, 3*w+3*s, 0), p2=(l, 4*w+3*s, h)),
#              'region_8': df.Region(p1=(l+s, 3*w+3*s, 0), p2=(2*l + s, 4*w+3*s, h)),
#               'region_9': df.Region(p1=(0, 4*w+4*s, 0), p2=(l, 5*w+4*s, h)),
#              'region_10': df.Region(p1=(l+s, 4*w+4*s, 0), p2=(2*l + s, 5*w+4*s, h)),
#              'region_11': df.Region(p1=(0, 5*w+5*s, 0), p2=(l, 6*w+5*s, h)),
#              'region_12': df.Region(p1=(l+s, 5*w+5*s, 0), p2=(2*l + s, 6*w+5*s, h)),

            #  'region_13': df.Region(p1=(0,0,0+spc1), p2=(l, w, h+spc1)),
            #   'region_14': df.Region(p1=(l+s, 0, 0+spc1), p2=(2*l + s, w, h+spc1)),
            #  'region_15': df.Region(p1=(0, w+s, 0+spc1), p2=(l, 2*w+s, h+spc1)),
            #  'region_16': df.Region(p1=(l+s, w+s, 0+spc1), p2=(2*l + s, 2*w+s, h+spc1)),
            #   'region_17': df.Region(p1=(0, 2*w+2*s, 0+spc1), p2=(l, 3*w+2*s, h+spc1)),
            #  'region_18': df.Region(p1=(l+s, 2*w+2*s, 0+spc1), p2=(2*l + s, 3*w+2*s, h+spc1)),
            #  'region_19': df.Region(p1=(0, 3*w+3*s, 0+spc1), p2=(l, 4*w+3*s, h+spc1)),
            #  'region_20': df.Region(p1=(l+s, 3*w+3*s, 0+spc1), p2=(2*l + s, 4*w+3*s, h+spc1)),
            #   'region_21': df.Region(p1=(0, 4*w+4*s, 0+spc1), p2=(l, 5*w+4*s, h+spc1)),
            #  'region_22': df.Region(p1=(l+s, 4*w+4*s, 0+spc1), p2=(2*l + s, 5*w+4*s, h+spc1)),
            #  'region_23': df.Region(p1=(0, 5*w+5*s, 0+spc1), p2=(l, 6*w+5*s, h+spc1)),
            #  'region_24': df.Region(p1=(l+s, 5*w+5*s, 0+spc1), p2=(2*l + s, 6*w+5*s, h+spc1)),

            #  'region_25': df.Region(p1=(0,0,0+2*spc1), p2=(l, w, h+2*spc1)),
            #   'region_26': df.Region(p1=(l+s, 0, 0+2*spc1), p2=(2*l + s, w, h+2*spc1)),
            #  'region_27': df.Region(p1=(0, w+s, 0+2*spc1), p2=(l, 2*w+s, h+2*spc1)),
            #  'region_28': df.Region(p1=(l+s, w+s, 0+2*spc1), p2=(2*l + s, 2*w+s, h+2*spc1)),
            #   'region_29': df.Region(p1=(0, 2*w+2*s, 0+2*spc1), p2=(l, 3*w+2*s, h+2*spc1)),
            #  'region_30': df.Region(p1=(l+s, 2*w+2*s, 0+2*spc1), p2=(2*l + s, 3*w+2*s, h+2*spc1)),
            #  'region_31': df.Region(p1=(0, 3*w+3*s, 0+2*spc1), p2=(l, 4*w+3*s, h+2*spc1)),
            #  'region_32': df.Region(p1=(l+s, 3*w+3*s, 0+2*spc1), p2=(2*l + s, 4*w+3*s, h+2*spc1)),
            #   'region_33': df.Region(p1=(0, 4*w+4*s, 0+2*spc1), p2=(l, 5*w+4*s, h+2*spc1)),
            #  'region_34': df.Region(p1=(l+s, 4*w+4*s, 0+2*spc1), p2=(2*l + s, 5*w+4*s, h+2*spc1)),
            #  'region_35': df.Region(p1=(0, 5*w+5*s, 0+2*spc1), p2=(l, 6*w+5*s, h+2*spc1)),
            #  'region_36': df.Region(p1=(l+s, 5*w+5*s, 0+2*spc1), p2=(2*l + s, 6*w+5*s, h+2*spc1)),

            #  'region_37': df.Region(p1=(0,0,0+3*spc1), p2=(l, w, h+3*spc1)),
            #   'region_38': df.Region(p1=(l+s, 0, 0+3*spc1), p2=(2*l + s, w, h+3*spc1)),
            #  'region_39': df.Region(p1=(0, w+s, 0+3*spc1), p2=(l, 2*w+s, h+3*spc1)),
            #  'region_40': df.Region(p1=(l+s, w+s, 0+3*spc1), p2=(2*l + s, 2*w+s, h+3*spc1)),
            #   'region_41': df.Region(p1=(0, 2*w+2*s, 0+3*spc1), p2=(l, 3*w+2*s, h+3*spc1)),
            #  'region_42': df.Region(p1=(l+s, 2*w+2*s, 0+3*spc1), p2=(2*l + s, 3*w+2*s, h+3*spc1)),
            #  'region_43': df.Region(p1=(0, 3*w+3*s, 0+3*spc1), p2=(l, 4*w+3*s, h+3*spc1)),
            #  'region_44': df.Region(p1=(l+s, 3*w+3*s, 0+3*spc1), p2=(2*l + s, 4*w+3*s, h+3*spc1)),
            #   'region_45': df.Region(p1=(0, 4*w+4*s, 0+3*spc1), p2=(l, 5*w+4*s, h+3*spc1)),
            #  'region_46': df.Region(p1=(l+s, 4*w+4*s, 0+3*spc1), p2=(2*l + s, 5*w+4*s, h+3*spc1)),
            #  'region_47': df.Region(p1=(0, 5*w+5*s, 0+3*spc1), p2=(l, 6*w+5*s, h+3*spc1)),
            #  'region_48': df.Region(p1=(l+s, 5*w+5*s, 0+3*spc1), p2=(2*l + s, 6*w+5*s, h+3*spc1)),


            #  'region_49': df.Region(p1=(0,0,0+4*spc1), p2=(l, w, h+4*spc1)),
            #   'region_50': df.Region(p1=(l+s, 0, 0+4*spc1), p2=(2*l + s, w, h+4*spc1)),
            #  'region_51': df.Region(p1=(0, w+s, 0+4*spc1), p2=(l, 2*w+s, h+4*spc1)),
            #  'region_52': df.Region(p1=(l+s, w+s, 0+4*spc1), p2=(2*l + s, 2*w+s, h+4*spc1)),
            #   'region_53': df.Region(p1=(0, 2*w+2*s, 0+4*spc1), p2=(l, 3*w+2*s, h+4*spc1)),
            #  'region_54': df.Region(p1=(l+s, 2*w+2*s, 0+4*spc1), p2=(2*l + s, 3*w+2*s, h+4*spc1)),
            #  'region_55': df.Region(p1=(0, 3*w+3*s, 0+4*spc1), p2=(l, 4*w+3*s, h+4*spc1)),
            #  'region_56': df.Region(p1=(l+s, 3*w+3*s, 0+4*spc1), p2=(2*l + s, 4*w+3*s, h+4*spc1)),
            #   'region_57': df.Region(p1=(0, 4*w+4*s, 0+4*spc1), p2=(l, 5*w+4*s, h+4*spc1)),
            #  'region_58': df.Region(p1=(l+s, 4*w+4*s, 0+4*spc1), p2=(2*l + s, 5*w+4*s, h+4*spc1)),
            #  'region_59': df.Region(p1=(0, 5*w+5*s, 0+4*spc1), p2=(l, 6*w+5*s, h+4*spc1)),
            #  'region_60': df.Region(p1=(l+s, 5*w+5*s, 0+4*spc1), p2=(2*l + s, 6*w+5*s, h+4*spc1)),
            #   'interspace': df.Region(p1=(0,0,0), p2 = (2*l + s, 6*w +5*s, h+4*spc1))
            #  }

# mesh1 = df.Mesh(p1=(0,0,0), p2 = (2*l + s, 6*w+5*s, h+4*spc1), cell=cell, subregions=subregions1)

# subregions2 = {'region_1': df.Region(p1=(0,0,0), p2=(l, w, h)),
#               'region_2': df.Region(p1=(l+s, 0, 0), p2=(2*l + s, w, h)),
#              'region_3': df.Region(p1=(0, w+s, 0), p2=(l, 2*w+s, h)),
#              'region_4': df.Region(p1=(l+s, w+s, 0), p2=(2*l + s, 2*w+s, h)),
#               'region_5': df.Region(p1=(0, 2*w+2*s, 0), p2=(l, 3*w+2*s, h)),
#              'region_6': df.Region(p1=(l+s, 2*w+2*s, 0), p2=(2*l + s, 3*w+2*s, h)),
#              'region_7': df.Region(p1=(0, 3*w+3*s, 0), p2=(l, 4*w+3*s, h)),
#              'region_8': df.Region(p1=(l+s, 3*w+3*s, 0), p2=(2*l + s, 4*w+3*s, h)),
#               'region_9': df.Region(p1=(0, 4*w+4*s, 0), p2=(l, 5*w+4*s, h)),
#              'region_10': df.Region(p1=(l+s, 4*w+4*s, 0), p2=(2*l + s, 5*w+4*s, h)),
#              'region_11': df.Region(p1=(0, 5*w+5*s, 0), p2=(l, 6*w+5*s, h)),
#              'region_12': df.Region(p1=(l+s, 5*w+5*s, 0), p2=(2*l + s, 6*w+5*s, h)),

#              'region_13': df.Region(p1=(0,0,0+spc2), p2=(l, w, h+spc2)),
#               'region_14': df.Region(p1=(l+s, 0, 0+spc2), p2=(2*l + s, w, h+spc2)),
#              'region_15': df.Region(p1=(0, w+s, 0+spc2), p2=(l, 2*w+s, h+spc2)),
#              'region_16': df.Region(p1=(l+s, w+s, 0+spc2), p2=(2*l + s, 2*w+s, h+spc2)),
#               'region_17': df.Region(p1=(0, 2*w+2*s, 0+spc2), p2=(l, 3*w+2*s, h+spc2)),
#              'region_18': df.Region(p1=(l+s, 2*w+2*s, 0+spc2), p2=(2*l + s, 3*w+2*s, h+spc2)),
#              'region_19': df.Region(p1=(0, 3*w+3*s, 0+spc2), p2=(l, 4*w+3*s, h+spc2)),
#              'region_20': df.Region(p1=(l+s, 3*w+3*s, 0+spc2), p2=(2*l + s, 4*w+3*s, h+spc2)),
#               'region_21': df.Region(p1=(0, 4*w+4*s, 0+spc2), p2=(l, 5*w+4*s, h+spc2)),
#              'region_22': df.Region(p1=(l+s, 4*w+4*s, 0+spc2), p2=(2*l + s, 5*w+4*s, h+spc2)),
#              'region_23': df.Region(p1=(0, 5*w+5*s, 0+spc2), p2=(l, 6*w+5*s, h+spc2)),
#              'region_24': df.Region(p1=(l+s, 5*w+5*s, 0+spc2), p2=(2*l + s, 6*w+5*s, h+spc2)),

#              'region_25': df.Region(p1=(0,0,0+2*spc2), p2=(l, w, h+2*spc2)),
#               'region_26': df.Region(p1=(l+s, 0, 0+2*spc2), p2=(2*l + s, w, h+2*spc2)),
#              'region_27': df.Region(p1=(0, w+s, 0+2*spc2), p2=(l, 2*w+s, h+2*spc2)),
#              'region_28': df.Region(p1=(l+s, w+s, 0+2*spc2), p2=(2*l + s, 2*w+s, h+2*spc2)),
#               'region_29': df.Region(p1=(0, 2*w+2*s, 0+2*spc2), p2=(l, 3*w+2*s, h+2*spc2)),
#              'region_30': df.Region(p1=(l+s, 2*w+2*s, 0+2*spc2), p2=(2*l + s, 3*w+2*s, h+2*spc2)),
#              'region_31': df.Region(p1=(0, 3*w+3*s, 0+2*spc2), p2=(l, 4*w+3*s, h+2*spc2)),
#              'region_32': df.Region(p1=(l+s, 3*w+3*s, 0+2*spc2), p2=(2*l + s, 4*w+3*s, h+2*spc2)),
#               'region_33': df.Region(p1=(0, 4*w+4*s, 0+2*spc2), p2=(l, 5*w+4*s, h+2*spc2)),
#              'region_34': df.Region(p1=(l+s, 4*w+4*s, 0+2*spc2), p2=(2*l + s, 5*w+4*s, h+2*spc2)),
#              'region_35': df.Region(p1=(0, 5*w+5*s, 0+2*spc2), p2=(l, 6*w+5*s, h+2*spc2)),
#              'region_36': df.Region(p1=(l+s, 5*w+5*s, 0+2*spc2), p2=(2*l + s, 6*w+5*s, h+2*spc2)),

#              'region_37': df.Region(p1=(0,0,0+3*spc2), p2=(l, w, h+3*spc2)),
#               'region_38': df.Region(p1=(l+s, 0, 0+3*spc2), p2=(2*l + s, w, h+3*spc2)),
#              'region_39': df.Region(p1=(0, w+s, 0+3*spc2), p2=(l, 2*w+s, h+3*spc2)),
#              'region_40': df.Region(p1=(l+s, w+s, 0+3*spc2), p2=(2*l + s, 2*w+s, h+3*spc2)),
#               'region_41': df.Region(p1=(0, 2*w+2*s, 0+3*spc2), p2=(l, 3*w+2*s, h+3*spc2)),
#              'region_42': df.Region(p1=(l+s, 2*w+2*s, 0+3*spc2), p2=(2*l + s, 3*w+2*s, h+3*spc2)),
#              'region_43': df.Region(p1=(0, 3*w+3*s, 0+3*spc2), p2=(l, 4*w+3*s, h+3*spc2)),
#              'region_44': df.Region(p1=(l+s, 3*w+3*s, 0+3*spc2), p2=(2*l + s, 4*w+3*s, h+3*spc2)),
#               'region_45': df.Region(p1=(0, 4*w+4*s, 0+3*spc2), p2=(l, 5*w+4*s, h+3*spc2)),
#              'region_46': df.Region(p1=(l+s, 4*w+4*s, 0+3*spc2), p2=(2*l + s, 5*w+4*s, h+3*spc2)),
#              'region_47': df.Region(p1=(0, 5*w+5*s, 0+3*spc2), p2=(l, 6*w+5*s, h+3*spc2)),
#              'region_48': df.Region(p1=(l+s, 5*w+5*s, 0+3*spc2), p2=(2*l + s, 6*w+5*s, h+3*spc2)),


#              'region_49': df.Region(p1=(0,0,0+4*spc2), p2=(l, w, h+4*spc2)),
#               'region_50': df.Region(p1=(l+s, 0, 0+4*spc2), p2=(2*l + s, w, h+4*spc2)),
#              'region_51': df.Region(p1=(0, w+s, 0+4*spc2), p2=(l, 2*w+s, h+4*spc2)),
#              'region_52': df.Region(p1=(l+s, w+s, 0+4*spc2), p2=(2*l + s, 2*w+s, h+4*spc2)),
#               'region_53': df.Region(p1=(0, 2*w+2*s, 0+4*spc2), p2=(l, 3*w+2*s, h+4*spc2)),
#              'region_54': df.Region(p1=(l+s, 2*w+2*s, 0+4*spc2), p2=(2*l + s, 3*w+2*s, h+4*spc2)),
#              'region_55': df.Region(p1=(0, 3*w+3*s, 0+4*spc2), p2=(l, 4*w+3*s, h+4*spc2)),
#              'region_56': df.Region(p1=(l+s, 3*w+3*s, 0+4*spc2), p2=(2*l + s, 4*w+3*s, h+4*spc2)),
#               'region_57': df.Region(p1=(0, 4*w+4*s, 0+4*spc2), p2=(l, 5*w+4*s, h+4*spc2)),
#              'region_58': df.Region(p1=(l+s, 4*w+4*s, 0+4*spc2), p2=(2*l + s, 5*w+4*s, h+4*spc2)),
#              'region_59': df.Region(p1=(0, 5*w+5*s, 0+4*spc2), p2=(l, 6*w+5*s, h+4*spc2)),
#              'region_60': df.Region(p1=(l+s, 5*w+5*s, 0+4*spc2), p2=(2*l + s, 6*w+5*s, h+4*spc2)),
#               'interspace': df.Region(p1=(0,0,0), p2 = (2*l + s, 6*w +5*s, h+4*spc2))
#              }

# mesh2 = df.Mesh(p1=(0,0,0), p2 = (2*l + s, 6*w+5*s, h+4*spc2), cell=cell, subregions=subregions2)

# subregions3 = {'region_1': df.Region(p1=(0,0,0), p2=(l, w, h)),
#               'region_2': df.Region(p1=(l+s, 0, 0), p2=(2*l + s, w, h)),
#              'region_3': df.Region(p1=(0, w+s, 0), p2=(l, 2*w+s, h)),
#              'region_4': df.Region(p1=(l+s, w+s, 0), p2=(2*l + s, 2*w+s, h)),
#               'region_5': df.Region(p1=(0, 2*w+2*s, 0), p2=(l, 3*w+2*s, h)),
#              'region_6': df.Region(p1=(l+s, 2*w+2*s, 0), p2=(2*l + s, 3*w+2*s, h)),
#              'region_7': df.Region(p1=(0, 3*w+3*s, 0), p2=(l, 4*w+3*s, h)),
#              'region_8': df.Region(p1=(l+s, 3*w+3*s, 0), p2=(2*l + s, 4*w+3*s, h)),
#               'region_9': df.Region(p1=(0, 4*w+4*s, 0), p2=(l, 5*w+4*s, h)),
#              'region_10': df.Region(p1=(l+s, 4*w+4*s, 0), p2=(2*l + s, 5*w+4*s, h)),
#              'region_11': df.Region(p1=(0, 5*w+5*s, 0), p2=(l, 6*w+5*s, h)),
#              'region_12': df.Region(p1=(l+s, 5*w+5*s, 0), p2=(2*l + s, 6*w+5*s, h)),

#              'region_13': df.Region(p1=(0,0,0+spc3), p2=(l, w, h+spc3)),
#               'region_14': df.Region(p1=(l+s, 0, 0+spc3), p2=(2*l + s, w, h+spc3)),
#              'region_15': df.Region(p1=(0, w+s, 0+spc3), p2=(l, 2*w+s, h+spc3)),
#              'region_16': df.Region(p1=(l+s, w+s, 0+spc3), p2=(2*l + s, 2*w+s, h+spc3)),
#               'region_17': df.Region(p1=(0, 2*w+2*s, 0+spc3), p2=(l, 3*w+2*s, h+spc3)),
#              'region_18': df.Region(p1=(l+s, 2*w+2*s, 0+spc3), p2=(2*l + s, 3*w+2*s, h+spc3)),
#              'region_19': df.Region(p1=(0, 3*w+3*s, 0+spc3), p2=(l, 4*w+3*s, h+spc3)),
#              'region_20': df.Region(p1=(l+s, 3*w+3*s, 0+spc3), p2=(2*l + s, 4*w+3*s, h+spc3)),
#               'region_21': df.Region(p1=(0, 4*w+4*s, 0+spc3), p2=(l, 5*w+4*s, h+spc3)),
#              'region_22': df.Region(p1=(l+s, 4*w+4*s, 0+spc3), p2=(2*l + s, 5*w+4*s, h+spc3)),
#              'region_23': df.Region(p1=(0, 5*w+5*s, 0+spc3), p2=(l, 6*w+5*s, h+spc3)),
#              'region_24': df.Region(p1=(l+s, 5*w+5*s, 0+spc3), p2=(2*l + s, 6*w+5*s, h+spc3)),

#              'region_25': df.Region(p1=(0,0,0+2*spc3), p2=(l, w, h+2*spc3)),
#               'region_26': df.Region(p1=(l+s, 0, 0+2*spc3), p2=(2*l + s, w, h+2*spc3)),
#              'region_27': df.Region(p1=(0, w+s, 0+2*spc3), p2=(l, 2*w+s, h+2*spc3)),
#              'region_28': df.Region(p1=(l+s, w+s, 0+2*spc3), p2=(2*l + s, 2*w+s, h+2*spc3)),
#               'region_29': df.Region(p1=(0, 2*w+2*s, 0+2*spc3), p2=(l, 3*w+2*s, h+2*spc3)),
#              'region_30': df.Region(p1=(l+s, 2*w+2*s, 0+2*spc3), p2=(2*l + s, 3*w+2*s, h+2*spc3)),
#              'region_31': df.Region(p1=(0, 3*w+3*s, 0+2*spc3), p2=(l, 4*w+3*s, h+2*spc3)),
#              'region_32': df.Region(p1=(l+s, 3*w+3*s, 0+2*spc3), p2=(2*l + s, 4*w+3*s, h+2*spc3)),
#               'region_33': df.Region(p1=(0, 4*w+4*s, 0+2*spc3), p2=(l, 5*w+4*s, h+2*spc3)),
#              'region_34': df.Region(p1=(l+s, 4*w+4*s, 0+2*spc3), p2=(2*l + s, 5*w+4*s, h+2*spc3)),
#              'region_35': df.Region(p1=(0, 5*w+5*s, 0+2*spc3), p2=(l, 6*w+5*s, h+2*spc3)),
#              'region_36': df.Region(p1=(l+s, 5*w+5*s, 0+2*spc3), p2=(2*l + s, 6*w+5*s, h+2*spc3)),

#              'region_37': df.Region(p1=(0,0,0+3*spc3), p2=(l, w, h+3*spc3)),
#               'region_38': df.Region(p1=(l+s, 0, 0+3*spc3), p2=(2*l + s, w, h+3*spc3)),
#              'region_39': df.Region(p1=(0, w+s, 0+3*spc3), p2=(l, 2*w+s, h+3*spc3)),
#              'region_40': df.Region(p1=(l+s, w+s, 0+3*spc3), p2=(2*l + s, 2*w+s, h+3*spc3)),
#               'region_41': df.Region(p1=(0, 2*w+2*s, 0+3*spc3), p2=(l, 3*w+2*s, h+3*spc3)),
#              'region_42': df.Region(p1=(l+s, 2*w+2*s, 0+3*spc3), p2=(2*l + s, 3*w+2*s, h+3*spc3)),
#              'region_43': df.Region(p1=(0, 3*w+3*s, 0+3*spc3), p2=(l, 4*w+3*s, h+3*spc3)),
#              'region_44': df.Region(p1=(l+s, 3*w+3*s, 0+3*spc3), p2=(2*l + s, 4*w+3*s, h+3*spc3)),
#               'region_45': df.Region(p1=(0, 4*w+4*s, 0+3*spc3), p2=(l, 5*w+4*s, h+3*spc3)),
#              'region_46': df.Region(p1=(l+s, 4*w+4*s, 0+3*spc3), p2=(2*l + s, 5*w+4*s, h+3*spc3)),
#              'region_47': df.Region(p1=(0, 5*w+5*s, 0+3*spc3), p2=(l, 6*w+5*s, h+3*spc3)),
#              'region_48': df.Region(p1=(l+s, 5*w+5*s, 0+3*spc3), p2=(2*l + s, 6*w+5*s, h+3*spc3)),


#              'region_49': df.Region(p1=(0,0,0+4*spc3), p2=(l, w, h+4*spc3)),
#               'region_50': df.Region(p1=(l+s, 0, 0+4*spc3), p2=(2*l + s, w, h+4*spc3)),
#              'region_51': df.Region(p1=(0, w+s, 0+4*spc3), p2=(l, 2*w+s, h+4*spc3)),
#              'region_52': df.Region(p1=(l+s, w+s, 0+4*spc3), p2=(2*l + s, 2*w+s, h+4*spc3)),
#               'region_53': df.Region(p1=(0, 2*w+2*s, 0+4*spc3), p2=(l, 3*w+2*s, h+4*spc3)),
#              'region_54': df.Region(p1=(l+s, 2*w+2*s, 0+4*spc3), p2=(2*l + s, 3*w+2*s, h+4*spc3)),
#              'region_55': df.Region(p1=(0, 3*w+3*s, 0+4*spc3), p2=(l, 4*w+3*s, h+4*spc3)),
#              'region_56': df.Region(p1=(l+s, 3*w+3*s, 0+4*spc3), p2=(2*l + s, 4*w+3*s, h+4*spc3)),
#               'region_57': df.Region(p1=(0, 4*w+4*s, 0+4*spc3), p2=(l, 5*w+4*s, h+4*spc3)),
#              'region_58': df.Region(p1=(l+s, 4*w+4*s, 0+4*spc3), p2=(2*l + s, 5*w+4*s, h+4*spc3)),
#              'region_59': df.Region(p1=(0, 5*w+5*s, 0+4*spc3), p2=(l, 6*w+5*s, h+4*spc3)),
#              'region_60': df.Region(p1=(l+s, 5*w+5*s, 0+4*spc3), p2=(2*l + s, 6*w+5*s, h+4*spc3)),
#               'interspace': df.Region(p1=(0,0,0), p2 = (2*l + s, 6*w +5*s, h+4*spc3))
#              }

# mesh3 = df.Mesh(p1=(0,0,0), p2 = (2*l + s, 6*w+5*s, h+4*spc3), cell=cell, subregions=subregions3)

# defines name for each system
system = mm.System(name='easyaxis_68nm_1T')
# system1 = mm.System(name='easyaxis_70nm_1T')
# system2 = mm.System(name='easy_axis_100nm_1T') 
# system3 = mm.System(name='easyaxis_300nm_1T') 

vectorDF = pd.read_csv('./cartesian_easy_axis.csv') # loads easy axis angle data (3 vector data [x,y,z])
print("easy axis data CSV loaded")

# anisotropies for each region are a random easy axis direction from the distribution loaded from the csv 
u = {'region_1': list(vectorDF.loc[random.randint(0,len(vectorDF.index)-1)]),
    'region_2': list(vectorDF.loc[random.randint(0,len(vectorDF.index)-1)]),
    'region_3': list(vectorDF.loc[random.randint(0,len(vectorDF.index)-1)]),
    'region_4': list(vectorDF.loc[random.randint(0,len(vectorDF.index)-1)]),
    'region_5': list(vectorDF.loc[random.randint(0,len(vectorDF.index)-1)]),
    'region_6': list(vectorDF.loc[random.randint(0,len(vectorDF.index)-1)]),
    'region_7': list(vectorDF.loc[random.randint(0,len(vectorDF.index)-1)]),
    'region_8': list(vectorDF.loc[random.randint(0,len(vectorDF.index)-1)]),
    'region_9': list(vectorDF.loc[random.randint(0,len(vectorDF.index)-1)]),
    'region_10': list(vectorDF.loc[random.randint(0,len(vectorDF.index)-1)]),
    'region_11': list(vectorDF.loc[random.randint(0,len(vectorDF.index)-1)]),
    'region_12': list(vectorDF.loc[random.randint(0,len(vectorDF.index)-1)]),
    # 'region_13': list(vectorDF.loc[random.randint(0,len(vectorDF.index)-1)]),
    # 'region_14': list(vectorDF.loc[random.randint(0,len(vectorDF.index)-1)]),
    # 'region_15': list(vectorDF.loc[random.randint(0,len(vectorDF.index)-1)]),
    # 'region_16': list(vectorDF.loc[random.randint(0,len(vectorDF.index)-1)]),
    # 'region_17': list(vectorDF.loc[random.randint(0,len(vectorDF.index)-1)]),
    # 'region_18': list(vectorDF.loc[random.randint(0,len(vectorDF.index)-1)]),
    # 'region_19': list(vectorDF.loc[random.randint(0,len(vectorDF.index)-1)]),
    # 'region_20': list(vectorDF.loc[random.randint(0,len(vectorDF.index)-1)]),
    # 'region_21': list(vectorDF.loc[random.randint(0,len(vectorDF.index)-1)]),
    # 'region_22': list(vectorDF.loc[random.randint(0,len(vectorDF.index)-1)]),
    # 'region_23': list(vectorDF.loc[random.randint(0,len(vectorDF.index)-1)]),
    # 'region_24': list(vectorDF.loc[random.randint(0,len(vectorDF.index)-1)]),
    # 'region_25': list(vectorDF.loc[random.randint(0,len(vectorDF.index)-1)]),
    # 'region_26': list(vectorDF.loc[random.randint(0,len(vectorDF.index)-1)]),
    # 'region_27': list(vectorDF.loc[random.randint(0,len(vectorDF.index)-1)]),
    # 'region_28': list(vectorDF.loc[random.randint(0,len(vectorDF.index)-1)]),
    # 'region_29': list(vectorDF.loc[random.randint(0,len(vectorDF.index)-1)]),
    # 'region_30': list(vectorDF.loc[random.randint(0,len(vectorDF.index)-1)]),
    # 'region_31': list(vectorDF.loc[random.randint(0,len(vectorDF.index)-1)]),
    # 'region_32': list(vectorDF.loc[random.randint(0,len(vectorDF.index)-1)]),
    # 'region_33': list(vectorDF.loc[random.randint(0,len(vectorDF.index)-1)]),
    # 'region_34': list(vectorDF.loc[random.randint(0,len(vectorDF.index)-1)]),
    # 'region_35': list(vectorDF.loc[random.randint(0,len(vectorDF.index)-1)]),
    # 'region_36': list(vectorDF.loc[random.randint(0,len(vectorDF.index)-1)]),
    # 'region_37': list(vectorDF.loc[random.randint(0,len(vectorDF.index)-1)]),
    # 'region_38': list(vectorDF.loc[random.randint(0,len(vectorDF.index)-1)]),
    # 'region_39': list(vectorDF.loc[random.randint(0,len(vectorDF.index)-1)]),
    # 'region_40': list(vectorDF.loc[random.randint(0,len(vectorDF.index)-1)]),
    # 'region_41': list(vectorDF.loc[random.randint(0,len(vectorDF.index)-1)]),
    # 'region_42': list(vectorDF.loc[random.randint(0,len(vectorDF.index)-1)]),
    # 'region_43': list(vectorDF.loc[random.randint(0,len(vectorDF.index)-1)]),
    # 'region_44': list(vectorDF.loc[random.randint(0,len(vectorDF.index)-1)]),
    # 'region_45': list(vectorDF.loc[random.randint(0,len(vectorDF.index)-1)]),
    # 'region_46': list(vectorDF.loc[random.randint(0,len(vectorDF.index)-1)]),
    # 'region_47': list(vectorDF.loc[random.randint(0,len(vectorDF.index)-1)]),
    # 'region_48': list(vectorDF.loc[random.randint(0,len(vectorDF.index)-1)]),
    # 'region_49': list(vectorDF.loc[random.randint(0,len(vectorDF.index)-1)]),
    # 'region_50': list(vectorDF.loc[random.randint(0,len(vectorDF.index)-1)]),
    # 'region_51': list(vectorDF.loc[random.randint(0,len(vectorDF.index)-1)]),
    # 'region_52': list(vectorDF.loc[random.randint(0,len(vectorDF.index)-1)]),
    # 'region_53': list(vectorDF.loc[random.randint(0,len(vectorDF.index)-1)]),
    # 'region_54': list(vectorDF.loc[random.randint(0,len(vectorDF.index)-1)]),
    # 'region_55': list(vectorDF.loc[random.randint(0,len(vectorDF.index)-1)]),
    # 'region_56': list(vectorDF.loc[random.randint(0,len(vectorDF.index)-1)]),
    # 'region_57': list(vectorDF.loc[random.randint(0,len(vectorDF.index)-1)]),
    # 'region_58': list(vectorDF.loc[random.randint(0,len(vectorDF.index)-1)]),
    # 'region_59': list(vectorDF.loc[random.randint(0,len(vectorDF.index)-1)]),
    # 'region_60': list(vectorDF.loc[random.randint(0,len(vectorDF.index)-1)]),
    'interspace': (1,0,0)}

# u1 = {'region_1': list(vectorDF.loc[random.randint(0,len(vectorDF.index)-1)]),
#     'region_2': list(vectorDF.loc[random.randint(0,len(vectorDF.index)-1)]),
#     'region_3': list(vectorDF.loc[random.randint(0,len(vectorDF.index)-1)]),
#     'region_4': list(vectorDF.loc[random.randint(0,len(vectorDF.index)-1)]),
#     'region_5': list(vectorDF.loc[random.randint(0,len(vectorDF.index)-1)]),
#     'region_6': list(vectorDF.loc[random.randint(0,len(vectorDF.index)-1)]),
#     'region_7': list(vectorDF.loc[random.randint(0,len(vectorDF.index)-1)]),
#     'region_8': list(vectorDF.loc[random.randint(0,len(vectorDF.index)-1)]),
#     'region_9': list(vectorDF.loc[random.randint(0,len(vectorDF.index)-1)]),
#     'region_10': list(vectorDF.loc[random.randint(0,len(vectorDF.index)-1)]),
#     'region_11': list(vectorDF.loc[random.randint(0,len(vectorDF.index)-1)]),
#     'region_12': list(vectorDF.loc[random.randint(0,len(vectorDF.index)-1)]),
#     'region_13': list(vectorDF.loc[random.randint(0,len(vectorDF.index)-1)]),
#     'region_14': list(vectorDF.loc[random.randint(0,len(vectorDF.index)-1)]),
#     'region_15': list(vectorDF.loc[random.randint(0,len(vectorDF.index)-1)]),
#     'region_16': list(vectorDF.loc[random.randint(0,len(vectorDF.index)-1)]),
#     'region_17': list(vectorDF.loc[random.randint(0,len(vectorDF.index)-1)]),
#     'region_18': list(vectorDF.loc[random.randint(0,len(vectorDF.index)-1)]),
#     'region_19': list(vectorDF.loc[random.randint(0,len(vectorDF.index)-1)]),
#     'region_20': list(vectorDF.loc[random.randint(0,len(vectorDF.index)-1)]),
#     'region_21': list(vectorDF.loc[random.randint(0,len(vectorDF.index)-1)]),
#     'region_22': list(vectorDF.loc[random.randint(0,len(vectorDF.index)-1)]),
#     'region_23': list(vectorDF.loc[random.randint(0,len(vectorDF.index)-1)]),
#     'region_24': list(vectorDF.loc[random.randint(0,len(vectorDF.index)-1)]),
#     'region_25': list(vectorDF.loc[random.randint(0,len(vectorDF.index)-1)]),
#     'region_26': list(vectorDF.loc[random.randint(0,len(vectorDF.index)-1)]),
#     'region_27': list(vectorDF.loc[random.randint(0,len(vectorDF.index)-1)]),
#     'region_28': list(vectorDF.loc[random.randint(0,len(vectorDF.index)-1)]),
#     'region_29': list(vectorDF.loc[random.randint(0,len(vectorDF.index)-1)]),
#     'region_30': list(vectorDF.loc[random.randint(0,len(vectorDF.index)-1)]),
#     'region_31': list(vectorDF.loc[random.randint(0,len(vectorDF.index)-1)]),
#     'region_32': list(vectorDF.loc[random.randint(0,len(vectorDF.index)-1)]),
#     'region_33': list(vectorDF.loc[random.randint(0,len(vectorDF.index)-1)]),
#     'region_34': list(vectorDF.loc[random.randint(0,len(vectorDF.index)-1)]),
#     'region_35': list(vectorDF.loc[random.randint(0,len(vectorDF.index)-1)]),
#     'region_36': list(vectorDF.loc[random.randint(0,len(vectorDF.index)-1)]),
#     'region_37': list(vectorDF.loc[random.randint(0,len(vectorDF.index)-1)]),
#     'region_38': list(vectorDF.loc[random.randint(0,len(vectorDF.index)-1)]),
#     'region_39': list(vectorDF.loc[random.randint(0,len(vectorDF.index)-1)]),
#     'region_40': list(vectorDF.loc[random.randint(0,len(vectorDF.index)-1)]),
#     'region_41': list(vectorDF.loc[random.randint(0,len(vectorDF.index)-1)]),
#     'region_42': list(vectorDF.loc[random.randint(0,len(vectorDF.index)-1)]),
#     'region_43': list(vectorDF.loc[random.randint(0,len(vectorDF.index)-1)]),
#     'region_44': list(vectorDF.loc[random.randint(0,len(vectorDF.index)-1)]),
#     'region_45': list(vectorDF.loc[random.randint(0,len(vectorDF.index)-1)]),
#     'region_46': list(vectorDF.loc[random.randint(0,len(vectorDF.index)-1)]),
#     'region_47': list(vectorDF.loc[random.randint(0,len(vectorDF.index)-1)]),
#     'region_48': list(vectorDF.loc[random.randint(0,len(vectorDF.index)-1)]),
#     'region_49': list(vectorDF.loc[random.randint(0,len(vectorDF.index)-1)]),
#     'region_50': list(vectorDF.loc[random.randint(0,len(vectorDF.index)-1)]),
#     'region_51': list(vectorDF.loc[random.randint(0,len(vectorDF.index)-1)]),
#     'region_52': list(vectorDF.loc[random.randint(0,len(vectorDF.index)-1)]),
#     'region_53': list(vectorDF.loc[random.randint(0,len(vectorDF.index)-1)]),
#     'region_54': list(vectorDF.loc[random.randint(0,len(vectorDF.index)-1)]),
#     'region_55': list(vectorDF.loc[random.randint(0,len(vectorDF.index)-1)]),
#     'region_56': list(vectorDF.loc[random.randint(0,len(vectorDF.index)-1)]),
#     'region_57': list(vectorDF.loc[random.randint(0,len(vectorDF.index)-1)]),
#     'region_58': list(vectorDF.loc[random.randint(0,len(vectorDF.index)-1)]),
#     'region_59': list(vectorDF.loc[random.randint(0,len(vectorDF.index)-1)]),
#     'region_60': list(vectorDF.loc[random.randint(0,len(vectorDF.index)-1)]),
#     'interspace': (1,0,0)}

# u2 = {'region_1': list(vectorDF.loc[random.randint(0,len(vectorDF.index)-1)]),
#     'region_2': list(vectorDF.loc[random.randint(0,len(vectorDF.index)-1)]),
#     'region_3': list(vectorDF.loc[random.randint(0,len(vectorDF.index)-1)]),
#     'region_4': list(vectorDF.loc[random.randint(0,len(vectorDF.index)-1)]),
#     'region_5': list(vectorDF.loc[random.randint(0,len(vectorDF.index)-1)]),
#     'region_6': list(vectorDF.loc[random.randint(0,len(vectorDF.index)-1)]),
#     'region_7': list(vectorDF.loc[random.randint(0,len(vectorDF.index)-1)]),
#     'region_8': list(vectorDF.loc[random.randint(0,len(vectorDF.index)-1)]),
#     'region_9': list(vectorDF.loc[random.randint(0,len(vectorDF.index)-1)]),
#     'region_10': list(vectorDF.loc[random.randint(0,len(vectorDF.index)-1)]),
#     'region_11': list(vectorDF.loc[random.randint(0,len(vectorDF.index)-1)]),
#     'region_12': list(vectorDF.loc[random.randint(0,len(vectorDF.index)-1)]),
#     'region_13': list(vectorDF.loc[random.randint(0,len(vectorDF.index)-1)]),
#     'region_14': list(vectorDF.loc[random.randint(0,len(vectorDF.index)-1)]),
#     'region_15': list(vectorDF.loc[random.randint(0,len(vectorDF.index)-1)]),
#     'region_16': list(vectorDF.loc[random.randint(0,len(vectorDF.index)-1)]),
#     'region_17': list(vectorDF.loc[random.randint(0,len(vectorDF.index)-1)]),
#     'region_18': list(vectorDF.loc[random.randint(0,len(vectorDF.index)-1)]),
#     'region_19': list(vectorDF.loc[random.randint(0,len(vectorDF.index)-1)]),
#     'region_20': list(vectorDF.loc[random.randint(0,len(vectorDF.index)-1)]),
#     'region_21': list(vectorDF.loc[random.randint(0,len(vectorDF.index)-1)]),
#     'region_22': list(vectorDF.loc[random.randint(0,len(vectorDF.index)-1)]),
#     'region_23': list(vectorDF.loc[random.randint(0,len(vectorDF.index)-1)]),
#     'region_24': list(vectorDF.loc[random.randint(0,len(vectorDF.index)-1)]),
#     'region_25': list(vectorDF.loc[random.randint(0,len(vectorDF.index)-1)]),
#     'region_26': list(vectorDF.loc[random.randint(0,len(vectorDF.index)-1)]),
#     'region_27': list(vectorDF.loc[random.randint(0,len(vectorDF.index)-1)]),
#     'region_28': list(vectorDF.loc[random.randint(0,len(vectorDF.index)-1)]),
#     'region_29': list(vectorDF.loc[random.randint(0,len(vectorDF.index)-1)]),
#     'region_30': list(vectorDF.loc[random.randint(0,len(vectorDF.index)-1)]),
#     'region_31': list(vectorDF.loc[random.randint(0,len(vectorDF.index)-1)]),
#     'region_32': list(vectorDF.loc[random.randint(0,len(vectorDF.index)-1)]),
#     'region_33': list(vectorDF.loc[random.randint(0,len(vectorDF.index)-1)]),
#     'region_34': list(vectorDF.loc[random.randint(0,len(vectorDF.index)-1)]),
#     'region_35': list(vectorDF.loc[random.randint(0,len(vectorDF.index)-1)]),
#     'region_36': list(vectorDF.loc[random.randint(0,len(vectorDF.index)-1)]),
#     'region_37': list(vectorDF.loc[random.randint(0,len(vectorDF.index)-1)]),
#     'region_38': list(vectorDF.loc[random.randint(0,len(vectorDF.index)-1)]),
#     'region_39': list(vectorDF.loc[random.randint(0,len(vectorDF.index)-1)]),
#     'region_40': list(vectorDF.loc[random.randint(0,len(vectorDF.index)-1)]),
#     'region_41': list(vectorDF.loc[random.randint(0,len(vectorDF.index)-1)]),
#     'region_42': list(vectorDF.loc[random.randint(0,len(vectorDF.index)-1)]),
#     'region_43': list(vectorDF.loc[random.randint(0,len(vectorDF.index)-1)]),
#     'region_44': list(vectorDF.loc[random.randint(0,len(vectorDF.index)-1)]),
#     'region_45': list(vectorDF.loc[random.randint(0,len(vectorDF.index)-1)]),
#     'region_46': list(vectorDF.loc[random.randint(0,len(vectorDF.index)-1)]),
#     'region_47': list(vectorDF.loc[random.randint(0,len(vectorDF.index)-1)]),
#     'region_48': list(vectorDF.loc[random.randint(0,len(vectorDF.index)-1)]),
#     'region_49': list(vectorDF.loc[random.randint(0,len(vectorDF.index)-1)]),
#     'region_50': list(vectorDF.loc[random.randint(0,len(vectorDF.index)-1)]),
#     'region_51': list(vectorDF.loc[random.randint(0,len(vectorDF.index)-1)]),
#     'region_52': list(vectorDF.loc[random.randint(0,len(vectorDF.index)-1)]),
#     'region_53': list(vectorDF.loc[random.randint(0,len(vectorDF.index)-1)]),
#     'region_54': list(vectorDF.loc[random.randint(0,len(vectorDF.index)-1)]),
#     'region_55': list(vectorDF.loc[random.randint(0,len(vectorDF.index)-1)]),
#     'region_56': list(vectorDF.loc[random.randint(0,len(vectorDF.index)-1)]),
#     'region_57': list(vectorDF.loc[random.randint(0,len(vectorDF.index)-1)]),
#     'region_58': list(vectorDF.loc[random.randint(0,len(vectorDF.index)-1)]),
#     'region_59': list(vectorDF.loc[random.randint(0,len(vectorDF.index)-1)]),
#     'region_60': list(vectorDF.loc[random.randint(0,len(vectorDF.index)-1)]),
#     'interspace': (1,0,0)}

# u3 = {'region_1': list(vectorDF.loc[random.randint(0,len(vectorDF.index)-1)]),
#     'region_2': list(vectorDF.loc[random.randint(0,len(vectorDF.index)-1)]),
#     'region_3': list(vectorDF.loc[random.randint(0,len(vectorDF.index)-1)]),
#     'region_4': list(vectorDF.loc[random.randint(0,len(vectorDF.index)-1)]),
#     'region_5': list(vectorDF.loc[random.randint(0,len(vectorDF.index)-1)]),
#     'region_6': list(vectorDF.loc[random.randint(0,len(vectorDF.index)-1)]),
#     'region_7': list(vectorDF.loc[random.randint(0,len(vectorDF.index)-1)]),
#     'region_8': list(vectorDF.loc[random.randint(0,len(vectorDF.index)-1)]),
#     'region_9': list(vectorDF.loc[random.randint(0,len(vectorDF.index)-1)]),
#     'region_10': list(vectorDF.loc[random.randint(0,len(vectorDF.index)-1)]),
#     'region_11': list(vectorDF.loc[random.randint(0,len(vectorDF.index)-1)]),
#     'region_12': list(vectorDF.loc[random.randint(0,len(vectorDF.index)-1)]),
#     'region_13': list(vectorDF.loc[random.randint(0,len(vectorDF.index)-1)]),
#     'region_14': list(vectorDF.loc[random.randint(0,len(vectorDF.index)-1)]),
#     'region_15': list(vectorDF.loc[random.randint(0,len(vectorDF.index)-1)]),
#     'region_16': list(vectorDF.loc[random.randint(0,len(vectorDF.index)-1)]),
#     'region_17': list(vectorDF.loc[random.randint(0,len(vectorDF.index)-1)]),
#     'region_18': list(vectorDF.loc[random.randint(0,len(vectorDF.index)-1)]),
#     'region_19': list(vectorDF.loc[random.randint(0,len(vectorDF.index)-1)]),
#     'region_20': list(vectorDF.loc[random.randint(0,len(vectorDF.index)-1)]),
#     'region_21': list(vectorDF.loc[random.randint(0,len(vectorDF.index)-1)]),
#     'region_22': list(vectorDF.loc[random.randint(0,len(vectorDF.index)-1)]),
#     'region_23': list(vectorDF.loc[random.randint(0,len(vectorDF.index)-1)]),
#     'region_24': list(vectorDF.loc[random.randint(0,len(vectorDF.index)-1)]),
#     'region_25': list(vectorDF.loc[random.randint(0,len(vectorDF.index)-1)]),
#     'region_26': list(vectorDF.loc[random.randint(0,len(vectorDF.index)-1)]),
#     'region_27': list(vectorDF.loc[random.randint(0,len(vectorDF.index)-1)]),
#     'region_28': list(vectorDF.loc[random.randint(0,len(vectorDF.index)-1)]),
#     'region_29': list(vectorDF.loc[random.randint(0,len(vectorDF.index)-1)]),
#     'region_30': list(vectorDF.loc[random.randint(0,len(vectorDF.index)-1)]),
#     'region_31': list(vectorDF.loc[random.randint(0,len(vectorDF.index)-1)]),
#     'region_32': list(vectorDF.loc[random.randint(0,len(vectorDF.index)-1)]),
#     'region_33': list(vectorDF.loc[random.randint(0,len(vectorDF.index)-1)]),
#     'region_34': list(vectorDF.loc[random.randint(0,len(vectorDF.index)-1)]),
#     'region_35': list(vectorDF.loc[random.randint(0,len(vectorDF.index)-1)]),
#     'region_36': list(vectorDF.loc[random.randint(0,len(vectorDF.index)-1)]),
#     'region_37': list(vectorDF.loc[random.randint(0,len(vectorDF.index)-1)]),
#     'region_38': list(vectorDF.loc[random.randint(0,len(vectorDF.index)-1)]),
#     'region_39': list(vectorDF.loc[random.randint(0,len(vectorDF.index)-1)]),
#     'region_40': list(vectorDF.loc[random.randint(0,len(vectorDF.index)-1)]),
#     'region_41': list(vectorDF.loc[random.randint(0,len(vectorDF.index)-1)]),
#     'region_42': list(vectorDF.loc[random.randint(0,len(vectorDF.index)-1)]),
#     'region_43': list(vectorDF.loc[random.randint(0,len(vectorDF.index)-1)]),
#     'region_44': list(vectorDF.loc[random.randint(0,len(vectorDF.index)-1)]),
#     'region_45': list(vectorDF.loc[random.randint(0,len(vectorDF.index)-1)]),
#     'region_46': list(vectorDF.loc[random.randint(0,len(vectorDF.index)-1)]),
#     'region_47': list(vectorDF.loc[random.randint(0,len(vectorDF.index)-1)]),
#     'region_48': list(vectorDF.loc[random.randint(0,len(vectorDF.index)-1)]),
#     'region_49': list(vectorDF.loc[random.randint(0,len(vectorDF.index)-1)]),
#     'region_50': list(vectorDF.loc[random.randint(0,len(vectorDF.index)-1)]),
#     'region_51': list(vectorDF.loc[random.randint(0,len(vectorDF.index)-1)]),
#     'region_52': list(vectorDF.loc[random.randint(0,len(vectorDF.index)-1)]),
#     'region_53': list(vectorDF.loc[random.randint(0,len(vectorDF.index)-1)]),
#     'region_54': list(vectorDF.loc[random.randint(0,len(vectorDF.index)-1)]),
#     'region_55': list(vectorDF.loc[random.randint(0,len(vectorDF.index)-1)]),
#     'region_56': list(vectorDF.loc[random.randint(0,len(vectorDF.index)-1)]),
#     'region_57': list(vectorDF.loc[random.randint(0,len(vectorDF.index)-1)]),
#     'region_58': list(vectorDF.loc[random.randint(0,len(vectorDF.index)-1)]),
#     'region_59': list(vectorDF.loc[random.randint(0,len(vectorDF.index)-1)]),
#     'region_60': list(vectorDF.loc[random.randint(0,len(vectorDF.index)-1)]),
#     'interspace': (1,0,0)}
# A is the same for each region, interspace is 0
A_dict = {'region_1': A,
    'region_2': A,
    'region_3': A,
    'region_4': A,
    'region_5': A,
    'region_6': A,
    'region_7': A,
    'region_8': A,
    'region_9': A,
    'region_10': A,
    'region_11': A,
    'region_12': A,
    # 'region_13': A,
    # 'region_14': A,
    # 'region_15': A,
    # 'region_16': A,
    # 'region_17': A,
    # 'region_18': A,
    # 'region_19': A,
    # 'region_20': A,
    # 'region_21': A,
    # 'region_22': A,
    # 'region_23': A,
    # 'region_24': A,
    # 'region_25': A,
    # 'region_26': A,
    # 'region_27': A,
    # 'region_28': A,
    # 'region_29': A,
    # 'region_30': A,
    # 'region_31': A,
    # 'region_32': A,
    # 'region_33': A,
    # 'region_34': A,
    # 'region_35': A,
    # 'region_36': A,
    # 'region_37': A,
    # 'region_38': A,
    # 'region_39': A,
    # 'region_40': A,
    # 'region_41': A,
    # 'region_42': A,
    # 'region_43': A,
    # 'region_44': A,
    # 'region_45': A,
    # 'region_46': A,
    # 'region_47': A,
    # 'region_48': A,
    # 'region_49': A,
    # 'region_50': A,
    # 'region_51': A,
    # 'region_52': A,
    # 'region_53': A,
    # 'region_54': A,
    # 'region_55': A,
    # 'region_56': A,
    # 'region_57': A,
    # 'region_58': A,
    # 'region_59': A,
    # 'region_60': A,
    'interspace': 0}
# Ms is the same for each region, interspace is 0
Ms_dict = {'region_1': Ms,
    'region_2': Ms,
    'region_3': Ms,
    'region_4': Ms,
    'region_5': Ms,
    'region_6': Ms,
    'region_7': Ms,
    'region_8': Ms,
    'region_9': Ms,
    'region_10': Ms,
    'region_11': Ms,
    'region_12': Ms,
    # 'region_13': Ms,
    # 'region_14': Ms,
    # 'region_15': Ms,
    # 'region_16': Ms,
    # 'region_17': Ms,
    # 'region_18': Ms,
    # 'region_19': Ms,
    # 'region_20': Ms,
    # 'region_21': Ms,
    # 'region_22': Ms,
    # 'region_23': Ms,
    # 'region_24': Ms,
    # 'region_25': Ms,
    # 'region_26': Ms,
    # 'region_27': Ms,
    # 'region_28': Ms,
    # 'region_29': Ms,
    # 'region_30': Ms,
    # 'region_31': Ms,
    # 'region_32': Ms,
    # 'region_33': Ms,
    # 'region_34': Ms,
    # 'region_35': Ms,
    # 'region_36': Ms,
    # 'region_37': Ms,
    # 'region_38': Ms,
    # 'region_39': Ms,
    # 'region_40': Ms,
    # 'region_41': Ms,
    # 'region_42': Ms,
    # 'region_43': Ms,
    # 'region_44': Ms,
    # 'region_45': Ms,
    # 'region_46': Ms,
    # 'region_47': Ms,
    # 'region_48': Ms,
    # 'region_49': Ms,
    # 'region_50': Ms,
    # 'region_51': Ms,
    # 'region_52': Ms,
    # 'region_53': Ms,
    # 'region_54': Ms,
    # 'region_55': Ms,
    # 'region_56': Ms,
    # 'region_57': Ms,
    # 'region_58': Ms,
    # 'region_59': Ms,
    # 'region_60': Ms,
    'interspace': 0}

# Setting energy w/ exchange and uniaxial anisotropy
system.energy = mm.Exchange(A=A_dict) + mm.UniaxialAnisotropy(K=K, u=u)
# system1.energy = mm.Exchange(A=A_dict) + mm.UniaxialAnisotropy(K=K, u=u1)
# system2.energy = mm.Exchange(A=A_dict) + mm.UniaxialAnisotropy(K=K, u=u2)
# system3.energy = mm.Exchange(A=A_dict) + mm.UniaxialAnisotropy(K=K, u=u3)

print("Energy initialized.")

# Setting m on z axis (0,0,1)
system.m = df.Field(mesh, nvdim=3, value=(0,0,1.5e-3), norm=Ms_dict, )
# system1.m = df.Field(mesh1, dim=3, value=(0,0,1), norm=Ms_dict)
# system2.m = df.Field(mesh2, dim=3, value=(0,0,1), norm=Ms_dict)
# system3.m = df.Field(mesh3, dim=3, value=(0,0,1), norm=Ms_dict)

print("M initialized. Starting drives...")

csvname68 = './csvData/68nm-data-easyaxis(' + str(driveIndex) + ').csv'
# csvname70 = './csvData/70nm-data-easyaxis(' + str(driveIndex) + ').csv'
# csvname100 = './csvData/100nm-data-easyaxis(' + str(driveIndex) + ').csv'
# csvname300 = './csvData/300nm-data-easyaxis(' + str(driveIndex) + ').csv'

# Running hysteresis drivers
hd = mc.HysteresisDriver() 
hd = mc.MinDriver();
hd.drive(system, Hmin=Hmin, Hmax=Hmax, n=n, n_threads=12)
system.m.to_file("chains-easyaxis.vtk", representation='txt')
# system.table.data.to_csv(csvname68, index = True) 
# print(str(int(spc*10**9)) + 'nm written to csv')

# hd1 = mc.HysteresisDriver()
# hd1.drive(system1, Hmin=Hmin, Hmax=Hmax, n=n, n_threads=12)
# system1.table.data.to_csv(csvname70, index = True) 
# print(str(int(spc1*10**9)) + 'nm written to csv')

# hd2 = mc.HysteresisDriver()
# hd2.drive(system2, Hmin=Hmin, Hmax=Hmax, n=n, n_threads=12)
# system2.table.data.to_csv(csvname100, index = True) 
# print(str(int(spc2*10**9)) + 'nm written to csv')

# hd3 = mc.HysteresisDriver()
# hd3.drive(system3, Hmin=Hmin, Hmax=Hmax, n=n, n_threads=12)
# system3.table.data.to_csv(csvname300, index = True) 
# print(str(int(spc3*10**9)) + 'nm written to csv')
print("Finished!")